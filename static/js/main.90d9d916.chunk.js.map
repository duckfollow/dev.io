{"version":3,"sources":["assests/img/profile.jpg","assests/img/logo.svg","assests/img/facebook.svg","assests/img/instagram.svg","assests/img/twitter.svg","assests/img/github.svg","components/Contents.js","components/AppBarView.js","view/Main.js","components/ShareView.js","view/Oauth2.js","view/GitCommand.js","view/Encryption.js","view/AboutMe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Contents","props","console","log","path","this","context","history","push","className","Chip","label","variant","onClick","handleClick","bind","React","Component","AppBarView","handleMenu","event","handleClose","setState","menu","AnchorEl","state","inputRef","createRef","AppBar","position","color","ref","Toolbar","IconButton","edge","aria-label","home","src","logo","alt","Typography","aria-controls","aria-haspopup","profile","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","Main","ShareView","url","window","location","href","urlShareFb","target","rel","Oauth2","Container","Row","Col","GitCommand","Encryption","AboutMe","github","facebook","instagram","twitter","ScrollToTop","pathname","useLocation","useEffect","scrollTo","App","basename","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.90d9d916.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.b9ec4ef9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.7a00b986.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.06468580.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.62593ffa.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.f58833da.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.42d4d371.svg\";","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport './Contents.css';\n\nexport default class Contents extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    console.log(props);\n  }\n\n  handleClick(path) {\n    this.props.context.history.push(path);\n  }\n\n  render() {\n    return (\n      <div className=\"root\">\n        <Chip className=\"chip-view\" label=\"Oauth 2\" variant=\"outlined\" onClick={this.handleClick.bind(this,'/oauth2')}/>\n        <Chip className=\"chip-view\" label=\"Git\" variant=\"outlined\" onClick={this.handleClick.bind(this,'/git')}/>\n        <Chip className=\"chip-view\" label=\"encrypt & decrypt\" variant=\"outlined\" onClick={this.handleClick.bind(this,'/encrypt')}/>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nimport profile from '../assests/img/profile.jpg';\nimport logo from '../assests/img/logo.svg';\nimport \"./AppBarView.css\";\n\nexport default class AppBarView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menu: false,\n      AnchorEl: null\n    }\n    this.inputRef = React.createRef();\n  }\n\n  handleMenu = (event) => {\n    // this.setState({menu: true,AnchorEl:event.currentTarget})\n    this.props.context.history.push('/aboutme');\n  };\n\n  handleClose = () => {\n    this.setState({menu: false,AnchorEl:null})\n  };\n\n  home () {\n    this.props.context.history.push('/');\n  }\n\n  render() {\n    return (\n        <AppBar className=\"root\" position=\"static\" color=\"inherit\" ref={this.inputRef}>\n          <Toolbar>\n                <IconButton edge=\"start\" className=\"menuButton\" color=\"inherit\" aria-label=\"menu\" onClick={this.home.bind(this)}>\n                  <img className=\"img-logo\" src={logo} alt=\"img-logo\"/>\n                </IconButton>\n            <Typography variant=\"h6\" className=\"title\">\n              dev.io\n            </Typography>\n              <div>\n                <IconButton\n                  aria-label=\"account of current user\"\n                  aria-controls=\"menu-appbar\"\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu.bind(this)}\n                  color=\"inherit\"\n                >\n                  <img className=\"img-profile\" src={profile} alt=\"img-profile\"/>\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={this.state.AnchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={this.state.menu}\n                  onClose={this.handleClose.bind(this)}\n                >\n                  <MenuItem onClick={this.handleClose.bind(this)}>About Me?</MenuItem>\n                </Menu>\n              </div>\n          </Toolbar>\n        </AppBar>\n    );\n  }\n}\n","import React from 'react';\nimport './Main.css';\nimport Contents from '../components/Contents';\nimport AppBarView from '../components/AppBarView';\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n  }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <AppBarView context={this.props}/>\n                <Contents context={this.props}/>\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport './ShareView.css';\n\nexport default class ShareView extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    let url = window.location.href;\n    console.log(url);\n    this.state = {\n        urlShareFb: \"https://www.facebook.com/sharer/sharer.php?u=\"+url\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <a target=\"_blank\" href={this.state.urlShareFb} rel=\"noopener noreferrer\">facebook</a>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport './Oauth2.css';\nimport AppBarView from '../components/AppBarView';\nimport ShareView from '../components/ShareView';\n\n\nexport default class Oauth2 extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n  }\n\n    render() {\n        return (\n            <div>\n                <AppBarView context={this.props}/>\n                <Container>\n                  <Row>\n                    <Col>\n                      <h1>Oauth 2.0</h1>\n                      <p>มาตรฐานการเชื่อมต่อสำหรับการยืนยันตัวตนของผู้ใช้งานและจัดการสิทธิ์ต่างๆ โดยใช้ Token แทนการใช้ Username และ Password เข้าใช้แอพพลิเคชันทำให้มีความปลอดภัยในการใช้งาน</p>\n                      <h2>บทบาทของ OAuth2</h2>\n                      <ul>\n                        <li>resource owner : ข้อมูลของผู้ใช้งาน</li>\n                        <li>resource server</li>\n                        <li>client</li>\n                        <li>authorization server</li>\n                      </ul>\n                      <h2>OAuth 2.0 Grant Types</h2>\n                      <ul>\n                        <li>Authorization Code</li>\n                        <li>Implicit</li>\n                        <li>Password (Resource Owner Password Credentials)</li>\n                        <li>Client Credentials</li>\n                        <li>Device Code</li>\n                        <li>Refresh Token</li>\n                      </ul>\n                    </Col>\n                  </Row>\n                </Container>\n                <ShareView/>\n            </div>\n        );\n      }\n}","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport './GitCommand.css';\nimport AppBarView from '../components/AppBarView';\nimport ShareView from '../components/ShareView';\n\n\nexport default class GitCommand extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n  }\n\n    render() {\n        return (\n            <div>\n                <AppBarView context={this.props}/>\n                <Container>\n                  <Row>\n                    <Col>\n                      <h1>Git Version Control</h1>\n                      <p>ระบบจัดการควบคุมการเปลี่ยนแปลงของ Source Code</p>\n                      <h2>git status</h2>\n                      <ul>\n                          <li>Untracked</li>\n                          <li>Working Directory</li>\n                          <li>Staged</li>\n                          <li>Local Repository</li>\n                          <li>Remote Repository</li>\n                      </ul>\n                      <h2>Get Started</h2>\n                        <ul>\n                            <li>install git</li>\n                            <li>git --version</li>\n                        </ul>\n                        <p>Step commit cd /folder/project</p>\n                        <ul>\n                            <li>git init</li>\n                            <li>git status</li>\n                            <li>git add .</li>\n                            <li>git commit -m 'message'</li>\n                            <li>git push origin main</li>\n                        </ul>\n                      \n                    </Col>\n                  </Row>\n                </Container>\n                <ShareView/>\n            </div>\n        );\n      }\n}","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport './Encryption.css';\nimport AppBarView from '../components/AppBarView';\nimport ShareView from '../components/ShareView';\n\n\nexport default class Encryption extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n  }\n\n    render() {\n        return (\n            <div>\n                <AppBarView context={this.props}/>\n                <Container>\n                  <Row>\n                    <Col>\n                      <h1>การเข้ารหัสและถอดรหัส</h1>\n                    </Col>\n                  </Row>\n                </Container>\n                <ShareView/>\n            </div>\n        );\n      }\n}","import React from 'react';\nimport './AboutMe.css';\nimport profile from '../assests/img/profile.jpg';\nimport facebook from '../assests/img/facebook.svg';\nimport instagram from '../assests/img/instagram.svg';\nimport twitter from '../assests/img/twitter.svg';\nimport github from '../assests/img/github.svg';\n\nexport default class AboutMe extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props);\n    }\n\n    home () {\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div className=\"App-content\">\n                <img src={profile} className=\"img-circle img-profile-aboutme noselect\" alt=\"logo\" onClick={this.home.bind(this)} />\n                <p className=\"noselect\">Prasit Suphancho</p>\n                <div>\n                    <a href=\"https://github.com/duckfollow\">\n                        <img src={github} className=\"social-width\" alt=\"logo\" />\n                    </a>\n                    <a href=\"https://www.facebook.com/p.supancho\">\n                        <img src={facebook} className=\"social-width\" alt=\"logo\" />\n                    </a>\n                    <a href=\"https://www.instagram.com/tankps/\">\n                        <img src={instagram} className=\"social-width\" alt=\"logo\" />\n                    </a>\n                    <a href=\"https://twitter.com/slammonder\">\n                        <img src={twitter} className=\"social-width\" alt=\"logo\" />\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route} from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport Main from './view/Main';\nimport Oauth2 from './view/Oauth2';\nimport GitCommand from './view/GitCommand';\nimport Encryption from './view/Encryption';\nimport AboutMe from './view/AboutMe';\n\nfunction App() {\n  return (\n      <HashRouter basename=\"/\">\n        <ScrollToTop/>\n        <Route exact path=\"/\" component={Main} />\n        <Route exact path=\"/oauth2\" component={Oauth2} />\n        <Route exact path=\"/git\" component={GitCommand}/>\n        <Route exact path=\"/encrypt\" component={Encryption}/>\n        <Route exact path=\"/aboutme\" component={AboutMe} />\n      </HashRouter>\n  );\n}\n\nfunction ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}