{"version":3,"sources":["assests/img/instagram.svg","assests/img/twitter.svg","assests/img/github.svg","sounds/coin.mp3","components/Contents.js","components/AppBarView.js","view/Main.js","components/ShareView.js","components/CommentView.js","view/Oauth2.js","view/GitCommand.js","view/Encryption.js","view/NodeJsExpress.js","view/AboutMe.js","view/Donate.js","App.js","serviceWorker.js","index.js","FirebaseConfig.js","assests/img/profile.jpg","assests/img/facebook.svg"],"names":["module","exports","Contents","props","console","log","path","this","context","history","push","className","Chip","label","variant","onClick","handleClick","bind","React","Component","AppBarView","handleMenu","event","handleClose","setState","menu","AnchorEl","state","inputRef","createRef","AppBar","position","color","ref","Toolbar","Typography","home","IconButton","aria-label","aria-controls","aria-haspopup","src","profile","alt","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","Main","ShareView","url","window","location","href","urlShareFb","target","rel","facebook","UncontrolledPopover","trigger","placement","PopoverBody","CommentView","comment","dataComment","firebase","on","snapshot","dataText","forEach","data","val","key","text","value","dataRef","today","Date","toISOString","date","then","catch","e","onComment","Row","map","item","index","Col","sm","TextField","type","fullWidth","autoComplete","onChange","onCommentChange","onKeyDown","handleKeyDown","InputLabelProps","shrink","Button","Oauth2","Container","GitCommand","Encryption","NodeJsExpress","AboutMe","github","instagram","twitter","Donate","dataMessage","hidden","androidId","match","params","tmpText","dataMS","pack","title","length","dataCheck","ck_pack","includes","ck_title","toast","playAudio","document","getElementById","play","clickHidden","controls","preload","autoplay","classnames","coinSfx","ScrollToTop","pathname","useLocation","useEffect","scrollTo","App","basename","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.02e3678e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/instagram.62593ffa.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.f58833da.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.42d4d371.svg\";","module.exports = __webpack_public_path__ + \"static/media/coin.459fa681.mp3\";","import React from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport './Contents.css';\r\n\r\nexport default class Contents extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n  }\r\n\r\n  handleClick(path) {\r\n    this.props.context.history.push(path);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"root\">\r\n        <Chip className=\"chip-view\" label=\"Oauth 2\" variant=\"outlined\" onClick={this.handleClick.bind(this,'/oauth2')}/>\r\n        <Chip className=\"chip-view\" label=\"Git\" variant=\"outlined\" onClick={this.handleClick.bind(this,'/git')}/>\r\n        <Chip className=\"chip-view\" label=\"encrypt & decrypt\" variant=\"outlined\" onClick={this.handleClick.bind(this,'/encrypt')}/>\r\n        <Chip className=\"chip-view\" label=\"nodejs express\" variant=\"outlined\" onClick={this.handleClick.bind(this,'/nodejsexpress')}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nimport profile from '../assests/img/profile.jpg';\r\n// import logo from '../assests/img/logo.svg';\r\nimport \"./AppBarView.css\";\r\n\r\nexport default class AppBarView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      menu: false,\r\n      AnchorEl: null\r\n    }\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  handleMenu = (event) => {\r\n    // this.setState({menu: true,AnchorEl:event.currentTarget})\r\n    this.props.context.history.push('/aboutme');\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({menu: false,AnchorEl:null})\r\n  };\r\n\r\n  home () {\r\n    this.props.context.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <AppBar className=\"root\" position=\"static\" color=\"inherit\" ref={this.inputRef}>\r\n          <Toolbar>\r\n                {/* <IconButton edge=\"start\" className=\"menuButton\" color=\"inherit\" aria-label=\"menu\" onClick={this.home.bind(this)}>\r\n                  <img className=\"img-logo\" src={logo} alt=\"img-logo\"/>\r\n                </IconButton> */}\r\n            <Typography variant=\"h6\" className=\"title\" onClick={this.home.bind(this)}>\r\n              dev.io\r\n            </Typography>\r\n              <div>\r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={this.handleMenu.bind(this)}\r\n                  color=\"inherit\"\r\n                >\r\n                  <img className=\"img-profile\" src={profile} alt=\"img-profile\"/>\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={this.state.AnchorEl}\r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  open={this.state.menu}\r\n                  onClose={this.handleClose.bind(this)}\r\n                >\r\n                  <MenuItem onClick={this.handleClose.bind(this)}>About Me?</MenuItem>\r\n                </Menu>\r\n              </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Main.css';\r\nimport Contents from '../components/Contents';\r\nimport AppBarView from '../components/AppBarView';\r\n\r\nexport default class Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n  }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <AppBarView context={this.props}/>\r\n                <Contents context={this.props}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { UncontrolledPopover, PopoverBody } from \"reactstrap\";\r\nimport './ShareView.css';\r\nimport facebook from '../assests/img/facebook.svg';\r\n\r\nexport default class ShareView extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    let url = window.location.href;\r\n    console.log(url);\r\n    this.state = {\r\n        urlShareFb: \"https://www.facebook.com/sharer/sharer.php?u=\"+url\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"share-view\">\r\n          <a id=\"share-fb\" target=\"_blank\" href={this.state.urlShareFb} rel=\"noopener noreferrer\">\r\n              <img src={facebook} className=\"social-width\" alt=\"logo\" />\r\n          </a>\r\n          <UncontrolledPopover trigger=\"hover\" placement=\"top\" target=\"share-fb\">\r\n            <PopoverBody>Share facebook</PopoverBody>\r\n          </UncontrolledPopover>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './CommentView.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Row, Col } from 'reactstrap';\r\nimport * as firebase from 'firebase';\r\n\r\nexport default class CommentView extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props.path);\r\n    this.state = {\r\n        comment: '',\r\n        dataComment: []\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const dataComments = firebase.database().ref(\"comments\"+this.props.path);\r\n    dataComments.on('value', (snapshot) => {\r\n        let dataText = []; \r\n        snapshot.forEach(dataComment => {\r\n            let data = dataComment.val();\r\n            dataText.push({\r\n              key:dataComment.key,\r\n              text:data.text\r\n              });\r\n        });\r\n\r\n        this.setState({\r\n            dataComment: dataText\r\n        });\r\n    });\r\n  }\r\n\r\n  onCommentChange (event) {\r\n    this.setState({comment: event.target.value});\r\n  }\r\n\r\n  onComment () {\r\n    const dataRef = firebase.database();\r\n    let context = this;\r\n    let today = (new Date()).toISOString()\r\n    let data = {\r\n        text: this.state.comment,\r\n        date: today\r\n    }\r\n    if (this.state.comment !== '') {\r\n        dataRef.ref(\"comments\"+this.props.path).push(data).then(function (snapshot) {\r\n            console.log(\"success\")\r\n            console.log(snapshot.key)\r\n            context.setState({\r\n                comment: ''\r\n            })\r\n            }, function () {\r\n            console.log('rejected promise')\r\n        }).catch((e) => console.log(e))\r\n    }\r\n  }\r\n\r\n  handleKeyDown (event) {\r\n    if (event.key === 'Enter') {\r\n        this.onComment();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <h4>แสดงความคิดเห็น..</h4>\r\n            <Row>\r\n            {this.state.dataComment.map((item,index) => (\r\n                <Col sm={12} key={item.key}>\r\n                    <div className=\"card-view-comment\">\r\n                        {item.text}\r\n                    </div>\r\n                </Col>\r\n            ))}\r\n\r\n            </Row>\r\n            <TextField\r\n                id=\"standard-input\"\r\n                label=\"\"\r\n                type=\"text\"\r\n                fullWidth\r\n                autoComplete=\"off\"\r\n                value = {this.state.comment}\r\n                onChange = {this.onCommentChange.bind(this)}\r\n                onKeyDown={this.handleKeyDown.bind(this)}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <Button variant=\"contained\" onClick={this.onComment.bind(this)}>comment</Button>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport './Oauth2.css';\r\nimport AppBarView from '../components/AppBarView';\r\nimport ShareView from '../components/ShareView';\r\nimport CommentView from '../components/CommentView';\r\n\r\n\r\nexport default class Oauth2 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n  }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppBarView context={this.props}/>\r\n                <Container>\r\n                  <Row>\r\n                    <Col>\r\n                      <h1>Oauth 2.0</h1>\r\n                      <p>มาตรฐานการเชื่อมต่อสำหรับการยืนยันตัวตนของผู้ใช้งานและจัดการสิทธิ์ต่างๆ โดยใช้ Token แทนการใช้ Username และ Password เข้าใช้แอพพลิเคชันทำให้มีความปลอดภัยในการใช้งาน</p>\r\n                      <h2>บทบาทของ OAuth2</h2>\r\n                      <ul>\r\n                        <li>resource owner : ข้อมูลของผู้ใช้งาน</li>\r\n                        <li>resource server</li>\r\n                        <li>client</li>\r\n                        <li>authorization server</li>\r\n                      </ul>\r\n                      <h2>OAuth 2.0 Grant Types</h2>\r\n                      <ul>\r\n                        <li>Authorization Code</li>\r\n                        <li>Implicit</li>\r\n                        <li>Password (Resource Owner Password Credentials)</li>\r\n                        <li>Client Credentials</li>\r\n                        <li>Device Code</li>\r\n                        <li>Refresh Token</li>\r\n                      </ul>\r\n                    </Col>\r\n                  </Row>\r\n                  <ShareView/>\r\n                  <CommentView path=\"/oauth2\"/>\r\n                </Container>  \r\n            </div>\r\n        );\r\n      }\r\n}","import React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport './GitCommand.css';\r\nimport AppBarView from '../components/AppBarView';\r\nimport ShareView from '../components/ShareView';\r\nimport CommentView from '../components/CommentView';\r\n\r\nexport default class GitCommand extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n  }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppBarView context={this.props}/>\r\n                <Container>\r\n                  <Row>\r\n                    <Col>\r\n                      <h1>Git Version Control</h1>\r\n                      <p>ระบบจัดการควบคุมการเปลี่ยนแปลงของ Source Code</p>\r\n                      <h2>git status</h2>\r\n                      <ul>\r\n                          <li>Untracked</li>\r\n                          <li>Working Directory</li>\r\n                          <li>Staged</li>\r\n                          <li>Local Repository</li>\r\n                          <li>Remote Repository</li>\r\n                      </ul>\r\n                      <h2>Get Started</h2>\r\n                        <ul>\r\n                            <li>install git</li>\r\n                            <li>git --version</li>\r\n                        </ul>\r\n                        <p>Step commit cd /folder/project</p>\r\n                        <ul>\r\n                            <li>git init</li>\r\n                            <li>git status</li>\r\n                            <li>git add .</li>\r\n                            <li>git commit -m 'message'</li>\r\n                            <li>git push origin main</li>\r\n                        </ul>\r\n                      \r\n                    </Col>\r\n                  </Row>\r\n                  <ShareView/>\r\n                  <CommentView path=\"/git\"/>\r\n                </Container>\r\n                \r\n            </div>\r\n        );\r\n      }\r\n}","import React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport './Encryption.css';\r\nimport AppBarView from '../components/AppBarView';\r\nimport ShareView from '../components/ShareView';\r\nimport CommentView from '../components/CommentView';\r\n\r\n\r\nexport default class Encryption extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n  }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppBarView context={this.props}/>\r\n                <Container>\r\n                  <Row>\r\n                    <Col>\r\n                      <h1>การเข้ารหัสและถอดรหัส</h1>\r\n                      <p>จุดประสงค์ของการเข้ารหัสข้อมูล</p>\r\n                      <ul>\r\n                          <li>Confidentiality</li>\r\n                          <li>Integrity</li>\r\n                          <li>Authentication/Nonrepudiation</li>\r\n                      </ul>\r\n                      <h2>การเข้ารหัสข้อมูล (Cryptography)</h2>\r\n                      <h4>อัลกอริทึมในการเข้ารหัสข้อมูล</h4>\r\n                      <ul>\r\n                          <li>อัลกอริทึมแบบสมมาตร (Symmetric key algorithms)</li>\r\n                          <li>อัลกอริทึมแบบอสมมาตร (Asymmetric key algorithms)</li>\r\n                      </ul>\r\n                    </Col>\r\n                  </Row>\r\n                  <ShareView/>\r\n                  <CommentView path=\"/encrypt\"/>\r\n                </Container>\r\n            </div>\r\n        );\r\n      }\r\n}","import React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport './NodeJsExpress.css';\r\nimport AppBarView from '../components/AppBarView';\r\nimport ShareView from '../components/ShareView';\r\nimport CommentView from '../components/CommentView';\r\n\r\n\r\nexport default class NodeJsExpress extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n  }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppBarView context={this.props}/>\r\n                <Container>\r\n                  <Row>\r\n                    <Col>\r\n                        <h1>NodeJsExpress</h1>\r\n                    </Col>\r\n                  </Row>\r\n                  <ShareView/>\r\n                  <CommentView path=\"/nodejsexpress\"/>\r\n                </Container>\r\n            </div>\r\n        );\r\n      }\r\n}","import React from 'react';\r\nimport './AboutMe.css';\r\nimport profile from '../assests/img/profile.jpg';\r\nimport facebook from '../assests/img/facebook.svg';\r\nimport instagram from '../assests/img/instagram.svg';\r\nimport twitter from '../assests/img/twitter.svg';\r\nimport github from '../assests/img/github.svg';\r\n\r\nexport default class AboutMe extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props);\r\n    }\r\n\r\n    home () {\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App-content\">\r\n                <img src={profile} className=\"img-circle img-profile-aboutme noselect\" alt=\"logo\" onClick={this.home.bind(this)} />\r\n                <p className=\"noselect\">Prasit Suphancho</p>\r\n                <div>\r\n                    <a href=\"https://github.com/duckfollow\">\r\n                        <img src={github} className=\"social-width\" alt=\"logo\" />\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/p.supancho\">\r\n                        <img src={facebook} className=\"social-width\" alt=\"logo\" />\r\n                    </a>\r\n                    <a href=\"https://www.instagram.com/tankps/\">\r\n                        <img src={instagram} className=\"social-width\" alt=\"logo\" />\r\n                    </a>\r\n                    <a href=\"https://twitter.com/slammonder\">\r\n                        <img src={twitter} className=\"social-width\" alt=\"logo\" />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './Donate.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport * as firebase from 'firebase';\r\nimport coinSfx from \"../sounds/coin.mp3\";\r\nimport classnames from 'classnames';\r\nexport default class Donate extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props);\r\n        this.state = {\r\n            dataMessage: [],\r\n            hidden: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            const { id } = this.props.match.params\r\n            var androidId = id\r\n            // \"a858bd72cb694a45\"\r\n            var tmpText = \"\"\r\n            const _dataMessages = firebase.database().ref(\"message/\"+androidId);\r\n            _dataMessages.on('value', (snapshot) => {\r\n                let dataText = []; \r\n                snapshot.forEach(dataMS => {\r\n                    let data = dataMS.val();\r\n                    dataText.push({\r\n                        key:dataMS.key,\r\n                        pack:data.pack,\r\n                        title:data.title,\r\n                        text:data.text\r\n                    });\r\n                });\r\n                console.log(dataText.length);\r\n                \r\n                if (typeof(dataText[dataText.length -1]) !== \"undefined\" && typeof(dataText[dataText.length -1].title) !== \"undefined\") {\r\n                    let dataCheck = [\"android\",\"ใช้งานแชทเฮดอยู่\",\"com.google.android.googlequicksearchbox\",\"com.android.incallui\",\"com.spotify.music\",\"com.google.android.gm\",\"com.ookbee.aduang\",\"com.global.foodpanda.android\",\"asuk.com.android.app\",\"com.xiaomi.discover\"];\r\n                    var ck_pack = dataCheck.includes(dataText[dataText.length -1].pack);\r\n                    var ck_title = dataCheck.includes(dataText[dataText.length -1].title);\r\n                    if (ck_pack !== true && ck_title !== true && tmpText !== dataText[dataText.length -1].text) {\r\n                        tmpText = dataText[dataText.length -1].text;\r\n                        if (dataText[dataText.length -1].pack === \"th.co.truemoney.wallet\") {\r\n                            toast(\"🥰  \"+dataText[dataText.length -1].title+\"\\n\"+dataText[dataText.length -1].text);\r\n                            this.playAudio()\r\n                        } \r\n                    }\r\n                }\r\n            });\r\n        }catch {\r\n\r\n        }\r\n    }\r\n\r\n    playAudio() {\r\n        const audioE1 = document.getElementById(\"myAudio\");     \r\n        audioE1.play();\r\n    }\r\n\r\n    clickHidden() {\r\n        if (!this.state.hidden) {\r\n            this.setState({hidden:true})\r\n        } else {\r\n            this.setState({hidden:false})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.clickHidden.bind(this)}>\r\n                <ToastContainer />\r\n                <audio id=\"myAudio\" controls preload=\"auto\" autoplay className={classnames({\"myAudio-hidden\":this.state.hidden})}>\r\n                    <source src={coinSfx} type=\"audio/mpeg\"/>\r\n                </audio>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { HashRouter, Route} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport Main from './view/Main';\r\nimport Oauth2 from './view/Oauth2';\r\nimport GitCommand from './view/GitCommand';\r\nimport Encryption from './view/Encryption';\r\nimport NodeJsExpress from './view/NodeJsExpress';\r\nimport AboutMe from './view/AboutMe';\r\nimport Donate from './view/Donate';\r\n\r\nfunction App() {\r\n  return (\r\n      <HashRouter basename=\"/\">\r\n        <ScrollToTop/>\r\n        <Route exact path=\"/\" component={Main} />\r\n        <Route exact path=\"/oauth2\" component={Oauth2} />\r\n        <Route exact path=\"/git\" component={GitCommand}/>\r\n        <Route exact path=\"/encrypt\" component={Encryption}/>\r\n        <Route exact path=\"/nodejsexpress\" component={NodeJsExpress}/>\r\n        <Route exact path=\"/aboutme\" component={AboutMe} />\r\n        <Route exact path=\"/donate/:id\" component={Donate} />\r\n      </HashRouter>\r\n  );\r\n}\r\n\r\nfunction ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FirebaseDatabaseProvider } from \"@react-firebase/database\";\r\nimport * as firebase from \"firebase/app\";\r\nimport { firebaseConfig } from \"./FirebaseConfig\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <FirebaseDatabaseProvider {...firebaseConfig} firebase={firebase}>\r\n        <App />\r\n    </FirebaseDatabaseProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const firebaseConfig = {\r\n    apiKey: \"AIzaSyBf6TTk2eLlLyHNydcnkN6pZOt2a6bm4xI\",\r\n    authDomain: \"walkingstreet-75144.firebaseapp.com\",\r\n    databaseURL: \"https://walkingstreet-75144.firebaseio.com\",\r\n    projectId: \"walkingstreet-75144\",\r\n    storageBucket: \"walkingstreet-75144.appspot.com\",\r\n    messagingSenderId: \"531431312671\",\r\n    appId: \"1:531431312671:web:5d45c5b2dffe62a880b42a\"\r\n  };","module.exports = __webpack_public_path__ + \"static/media/profile.b9ec4ef9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.06468580.svg\";"],"sourceRoot":""}